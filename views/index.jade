extends layout

block content
  header#top.header
    .header-overlay.text-vertical-center
      include ./github_ribbon
      h1 Dumpster
      h3 A lightweight, self-hosted and API-based file upload server supporting YubiKey OTP authentication.
      br
      .col-md-6.col-md-offset-3#alert-div
        if !skipAuth
          #token-div
            input#token.form-control(type="text" placeholder="YubiKey Token / Password")
        #upload-div
          input#upload.file-loading(name='file', type='file')
        #expiration-div.col-md-3
          select#expiration.selectpicker.show-tick.show-menu-arrow(title="Expiration date")
            option(value="10m") 10 Minutes
            option(value="1h") 1 Hour
            option(value="1d") 1 Day
            option(value="3d") 3 Days
            option(value="7d", data-subtext="7 days") 1 Week
            option(value="14d", data-subtext="14 days") 2 Week
            option(value="30d", data-subtext="30 days") 1 Month

      //- http://plugins.krajee.com/file-input#ajax-uploads
      script.
        skipAuth = #{skipAuth}
        $(document).on('ready', function() {
          $("#upload").fileinput({
            'maxFileCount': 1,
            'uploadUrl': window.location.origin + '/api/upload?json=1'
          });
          if (!skipAuth) {
            $('#upload')
              .fileinput('refresh', { 'dropZoneEnabled': false })
              .fileinput('disable');
          }

          $('#upload').on('fileuploaded', function(event, data, previewId, index) {
            var response = data.response;
            $('#alert-div').html(createAlert(response.downloadUrl));
          });

          if (!skipAuth) {
            $('#token').on('input', function() {
              if($('#token').val().length > 0) {
                $('#upload')
                  .fileinput('refresh', {
                    'dropZoneEnabled': true,
                    'uploadUrl': window.location.origin + '/api/upload?json=1&token=' + $('#token').val() + '&del=' + getExpiration()
                    })
                  .fileinput('enable');
              } else {
                $('#upload')
                  .fileinput('clear')
                  .fileinput('refresh', { 'dropZoneEnabled': false })
                  .fileinput('disable');
              }
            });

            superplaceholder({
              el: document.querySelector('input[id=token]'),
              sentences: [ 'Insert your YubiKey and press its golden button' ],
              options: {
                letterDelay: 75,
                sentenceDelay: 3000,
                startOnFocus: true,
                loop: true,
                showCursor: true,
                cursor: '|'
              }
            });
          }

          $('#expiration').on('change', function() {
            var uploadUrl;
            if (skipAuth) {
              uploadUrl = window.location.origin + '/api/upload?json=1&del=' + $('#expiration').val();
            } else {
              uploadUrl = window.location.origin + '/api/upload?json=1&token=' + $('#token').val() + '&del=' + getExpiration();
            }
            $('#upload')
              .fileinput('refresh', {
                'uploadUrl': uploadUrl
              });
          });

          function createAlert(url) {
            var notif = '<div class="alert alert-success alert-dismissable> <i class="fa fa-check-square"></i>' +
              '<strong>Success! Here\'s your download link.</strong>' +
              '<hr class="message-inner-separator">' +
                '<a href="' + url + '">' + escapeHTMLEntities(url) + '</a>' +
              '</div>';

            return notif;
          }

          function escapeHTMLEntities(str) {
            return str.replace(/[\u00A0-\u9999<>\&]/gim, function(i) {
              return '&#' + i.charCodeAt(0) + ';';
            });
          }

          function getExpiration() {
            var expiration = document.getElementById('expiration');
            var selectedIndex = expiration.selectedIndex;
            if (selectedIndex == 0) {
              return "30d";
            } else {
              return expiration.options[selectedIndex].value;
            }
          }
        });
